---
title: "Class 5: Data Viz with ggplot"
author: "Ian Gurholt (PID A16767484)"
format: gfm
editor: visual
---

## Plotting in R

RR has lot's of ways to make plots and figures. This includes so-called **base** graphics and packages like **ggplot**

```{r}
plot(cars)
```

This is a **base** R plot of the in-built `cars` dataset that has only two columns

```{r}
head(cars)
```

> Q. How would we plot this data set with **ggplot2**?

All ggplot figures have at least 3 layers:

-data -aesthetics (how the data map to the plot) - geoms (how we draw the plot, lines, points, etc.)

Before I use any new package I need to download and install it with the `install.packages()` command.

I never use `install.packages()` within my quarto document otherwise I will install the package over and over and over again - which is silly!

Once a package is installed I can load it up with the `library()` function

> Q1. For which phases is data visualization important in our scientific workflows?

All the above (Communication of Results, EDA, Detection of Outliers)

> Q2. True or False? The ggplot2 package comes already installed with R?

FALSE

> Q3. Which plot types are typically NOT used to compare distributions of numeric variables?

Network Graphs

> Q4. Which statement about data visualization with ggplot2 is incorrect?

ggplot2 is the only way to create plots in R

> Q5. Which geometric layer should be used to create scatter plots in ggplot2?

geom_point()

```{r}
#install.packages(ggplot2)
library(ggplot2)
ggplot(cars)+
  aes(x=speed, y=dist)+
  geom_point()
```

Key point: For simple plots (like the one above) ggplot is more verbose (without need to do more typing) but as plots get more complicated ggplot starts to be more clear and simple than base R plot( )

> Q6. In your own RStudio can you add a trend line layer to help show the relationship between the plot variables with the geom_smooth() function?

Refer to code for scatterplot

> Q7. Argue with geom_smooth() to add a straight line from a linear model without the shaded standard error region?

Refer to code for scatterplot

> Q8. Can you finish this plot by adding various label annotations with the labs() function and changing the plot look to a more conservative “black & white” theme by adding the theme_bw() function?

Refer to code for scatterplot

```{r}
library(ggplot2)
ggplot(cars)+
  aes(speed,dist)+
  geom_point()+
  geom_smooth(se=FALSE, method=lm )+
  labs(title="Stopping distance of old cars", 
       subtitle = "From the in-built cars dataset")+
  theme_bw()
```

```{r}
url <- "https://bioboot.github.io/bimm143_S20/class-material/up_down_expression.txt"
genes <- read.delim(url)
head(genes)
```

> Q9. Use the nrow() function to find out how many genes are in this dataset. What is your answer?

```{r}
nrow(genes)
```

There are 5196 genes in this dataset

> Q10. Use the colnames() function and the ncol() function on the genes data frame to find out what the column names are (we will need these later) and how many columns there are. How many columns did you find?

```{r}
colnames(genes)
ncol(genes)
```

I found 4 columns in this dataset

> Q11. Use the table() function on the State column of this data.frame to find out how many ‘up’ regulated genes there are. What is your answer?

```{r}
table(genes$State)
```

There are 127 upregulated genes

> Q12. Using your values above and 2 significant figures. What fraction of total genes is up-regulated in this dataset?

```{r}
round(table(genes$State)/nrow(genes) * 100, 2 )
```

2.44% of genes are upregulated in this data set

> Q13. Complete the code below to produce the following plot

```{r}
ggplot(genes) + 
    aes(x=Condition1, y=Condition2) +
    geom_point()
```

```{r}
p <- ggplot(genes) + 
    aes(x=Condition1, y=Condition2, col=State) +
    geom_point()
p
```

```{r}
p + scale_colour_manual( values=c("blue","gray","red") )
```

> Q14. Nice, now add some plot annotations to the p object with the labs() function so your plot looks like the following:

```{r}
p + labs(title = "Gene Expression Changes Upon Drug Treatment", x = "Control (no drug)", y= "Drug Treatment") + scale_colour_manual(values=c("blue","gray","red"))
```

```{r}
url <- "https://raw.githubusercontent.com/jennybc/gapminder/master/inst/extdata/gapminder.tsv"

gapminder <- read.delim(url)
```

```{r}
library(dplyr)

gapminder_2007 <- gapminder %>% filter(year==2007)
```

> Q15. Complete the code below to produce a first basic scater plot of this gapminder_2007 dataset:

```{r}
library(ggplot2)
ggplot(gapminder_2007) +
  aes(x=gdpPercap, y=lifeExp, color=continent, size=pop) +
  geom_point(alpha=0.5)
```

```{r}
ggplot(gapminder_2007) + 
  aes(x = gdpPercap, y = lifeExp, color = pop) +
  geom_point(alpha=0.8)
```

```{r}
ggplot(gapminder_2007) + 
  aes(x = gdpPercap, y = lifeExp, size = pop) +
  geom_point(alpha=0.5)+
  scale_size_area(max_size = 10)
```

> Q16. Can you adapt the code you have learned thus far to reproduce our gapminder scatter plot for the year 1957? What do you notice about this plot is it easy to compare with the one for 2007?

```{r}
library(dplyr)

gapminder_1957 <- gapminder %>% filter(year==1957)

ggplot(gapminder_1957)+
  aes(x = gdpPercap, y = lifeExp, color=continent, size=pop)+
  geom_point(alpha=0.7)+
  scale_size_area(max_size = 15)
  

```

Without having both plots next to each other, or overlapping on the same graph, it is difficult to decipher the small differences between the two years as scrolling up and down to see each graph individually is inefficient and not very precise

> Q17. Do the same steps above but include 1957 and 2007 in your input dataset for ggplot(). You should now include the layer facet_wrap(\~year) to produce the following plot:

```{r}
gapminder_1957 <- gapminder %>% filter(year==1957 | year==2007)

ggplot(gapminder_1957)+
  aes(x = gdpPercap, y = lifeExp, color=continent, size=pop)+
  geom_point(alpha=0.7)+
  scale_size_area(max_size = 10)+
  facet_wrap(~year)
```

. Q. Extract data for US in 1992

```{r}
filter(gapminder, country=="United States", 
       year==1992)
```

What was the population of Ireland in the last year we have data for?

```{r}
filter(gapminder, country=="Ireland", 
       year==2007)
```

> Q. What countries in the data set had pop smaller than Ireland in 2007

```{r}
gap07 <- filter(gapminder, year==2007)
ire_pop <- filter(gap07,country=="Ireland")["pop"]
ire_pop
filter(gap07, pop<4109086)
```

\*\* OPTIONAL BAR CHARTS\*\*

```{r}
gapminder_top5 <- gapminder %>% 
  filter(year==2007) %>% 
  arrange(desc(pop)) %>% 
  top_n(5, pop)

gapminder_top5
```

```{r}
ggplot(gapminder_top5) + 
  geom_col(aes(x = country, y = pop))
```

> Q18. Create a bar chart showing the life expectancy of the five biggest countries by population in 2007.

```{r}
ggplot(gapminder_top5) + 
  geom_col(aes(x = country, y = lifeExp))
```

```{r}
ggplot(gapminder_top5) + 
  geom_col(aes(x = country, y = pop, fill = continent))
```

```{r}
ggplot(gapminder_top5) + 
  geom_col(aes(x = country, y = pop, fill = lifeExp))
```

> Q19. Plot population size by country. Create a bar chart showing the population (in millions) of the five biggest countries by population in 2007.

```{r}
ggplot(gapminder_top5) +
  aes(x=reorder(country, -pop), y=pop, fill=country) +
  geom_col(col="gray30") +
  guides(fill="none")

```
